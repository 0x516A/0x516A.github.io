<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[sqlmap总结]]></title>
    <url>%2F2019%2F01%2F12%2Fsqlmap%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[介绍 sqlmap是一个开源的渗透测试工具，可以用来自动化检测，利用SQL注入漏洞，获取数据库服务器的权限。它具有强度大的检测引擎，针对不同类型数据库的渗透测试的功能选项，包括获数据库中存储的数据，访问操作系统文件甚至可以通过外带数据连击的方式执行操作系统命令 官方网站 http://sqlmap.org用户手册https://github.com/sqlmapproject/sqlmap/wiki 特点sqlmap 支持 MySQL，Oracle，PostgreSQL，Microsoft SQL Server，Microsoft Access，IBM DB2，SQLite，Firebird，Sybase，SAP MaxDB和HSQLDB数据库管理系统。支持的sql注入技术 基于布尔的盲注:即可以根据返回页面判断条件真假的注入； 基于时间的盲注:即不能根据页面返回内容判断任何信息，用条件语句查看 时间延迟语句是否执行（即页面返回时间是否增加）来判断； 基于报错注入:即页面会返回错误信息，或者把注入的语句的结果直接返回在页面中； 联合查询注入:可以使用union的情况下的注入； 堆查询注入:可以同时执行多条语句的执行时的注入。 其它功能特点请查看官方手册 参数详解123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251Usage: python sqlmap.py [options]Options: -h, --help 显示基本帮助信息并退出 -hh 显示高级帮助消息并退出 --version 显示程序的版本号并退出 -v VERBOSE 详细程度：0-6（默认1） Target（目标）: 如果使用以下选项那必须要指定一个目标。 At least one of these options has to be provided to define the target(s) -d DIRECT 直接连接数据库的连接字符串 Connection string for direct database connection -u URL, --url=URL 目标网址（例如“http://www.site.com/vuln.php?id=1”） Target URL (e.g. &quot;http://www.site.com/vuln.php?id=1&quot;) -l LOGFILE 从Burp或WebScarab代理日志文件中解析目标 Parse target(s) from Burp or WebScarab proxy log file -x SITEMAPURL 从远程站点地图（.xml）文件中解析目标 Parse target(s) from remote sitemap(.xml) file -m BULKFILE 扫描文本文件中给出的多个目标 Scan multiple targets given in a textual file -r REQUESTFILE 从文件加载HTTP请求 Load HTTP request from a file -g GOOGLEDORK 将Google dork结果作为目标网址处理 Process Google dork results as target URLs -c CONFIGFILE 从配置INI文件加载选项 Load options from a configuration INI file Request（请求）: 这些选项可用于指定如何连接到目标URL These options can be used to specify how to connect to the target URL --method=METHOD 强制使用指定的HTTP方法（例如PUT） Force usage of given HTTP method (e.g. PUT) --data=DATA 要通过POST发送的数据字符串 Data string to be sent through POST --param-del=PARA.. 用于拆分参数值的字符(可以理解为手动指定参数的间隔字符) Character used for splitting parameter values --cookie=COOKIE HTTP Cookie标头值 HTTP Cookie header value --cookie-del=COO.. 用于分割cookie值的字符 Character used for splitting cookie values --load-cookies=L.. 包含Netscape / wget格式的Cookie的文件 File containing cookies in Netscape/wget format --drop-set-cookie 从响应中忽略Set-Cookie标头 Ignore Set-Cookie header from response --user-agent=AGENT HTTP User-Agent标头值 HTTP User-Agent header value --random-agent 使用随机选择的HTTP User-Agent标头值 Use randomly selected HTTP User-Agent header value --host=HOST HTTP主机头值 HTTP Host header value --referer=REFERER 在主机头中HTTP Referer(来路)的值 HTTP Referer header value -H HEADER, --hea.. 加载额外的头部标识 Extra header (e.g. &quot;X-Forwarded-For: 127.0.0.1&quot;) --headers=HEADERS 加载多个额外的头部标识 Extra headers (e.g. &quot;Accept-Language: fr\nETag: 123&quot;) --auth-type=AUTH.. HTTP身份验证类型（Basic，Digest，NTLM或PKI） HTTP authentication type (Basic, Digest, NTLM or PKI) --auth-cred=AUTH.. HTTP身份验证凭据（名称：密码） HTTP authentication credentials (name:password) --auth-file=AUTH.. HTTP身份验证PEM证书/私钥文件 HTTP authentication PEM cert/private key file --ignore-code=IG.. 忽略HTTP错误代码（例如401） Ignore HTTP error code (e.g. 401) --ignore-proxy 忽略系统默认代理设置 Ignore system default proxy settings --ignore-redirects 忽略重定向尝试 Ignore redirection attempts --ignore-timeouts 忽略连接超时 Ignore connection timeouts --proxy=PROXY 使用代理连接到目标URL Use a proxy to connect to the target URL --proxy-cred=PRO.. 代理身份验证凭据（名称：密码） Proxy authentication credentials (name:password) --proxy-file=PRO.. 从文件加载代理列表 Load proxy list from a file --tor 使用Tor匿名网络 Use Tor anonymity network --tor-port=TORPORT 设置Tor代理端口以外的默认值 Set Tor proxy port other than default --tor-type=TORTYPE 设置Tor代理类型（HTTP，SOCKS4或SOCKS5（默认）） Set Tor proxy type (HTTP, SOCKS4 or SOCKS5 (default)) --check-tor 检查Tor是否正确使用 Check to see if Tor is used properly --delay=DELAY 每个HTTP请求之间的延迟时间(遇到WAF防火墙等常用) Delay in seconds between each HTTP request --timeout=TIMEOUT 在超时连接之前等待的秒数（默认为30） Seconds to wait before timeout connection (default 30) --retries=RETRIES 连接超时时重试（默认3） Retries when the connection timeouts (default 3) --randomize=RPARAM 随机更改给定参数的值 Randomly change value for given parameter(s) --safe-url=SAFEURL 在测试期间经常访问的URL地址 URL address to visit frequently during testing --safe-post=SAFE.. POST数据发送到安全URL POST data to send to a safe URL --safe-req=SAFER.. 从文件加载安全的HTTP请求 Load safe HTTP request from a file --safe-freq=SAFE.. 测试两次访问给定安全URL之间的请求 Test requests between two visits to a given safe URL --skip-urlencode 跳过有效负载(攻击参数)数据的URL编码 Skip URL encoding of payload data --csrf-token=CSR.. 用于保存反CSRF令牌的参数 Parameter used to hold anti-CSRF token --csrf-url=CSRFURL 要访问的URL地址以提取反CSRF令牌 URL address to visit to extract anti-CSRF token --force-ssl 强制使用SSL / HTTPS Force usage of SSL/HTTPS --hpp 使用HTTP参数污染方法 Use HTTP parameter pollution method --eval=EVALCODE 在请求之前评估提供的Python代码 Evaluate provided Python code before the request (e.g. &quot;import hashlib;id2=hashlib.md5(id).hexdigest()&quot;) Optimization(优化): 这些选项可用于优化sqlmap的性能 These options can be used to optimize the performance of sqlmap -o 打开所有优化开关 Turn on all optimization switches --predict-output 预测常见查询输出 Predict common queries output --keep-alive 使用持久性HTTP（s）连接 Use persistent HTTP(s) connections --null-connection 检索页面长度而不使用实际的HTTP响应主体 Retrieve page length without actual HTTP response body --threads=THREADS 最大并发HTTP请求数（默认值为1） Max number of concurrent HTTP(s) requests (default 1) Injection(注入): 这些选项可用于指定要测试的参数，提供自定义注入有效负载和可选的篡改脚本 These options can be used to specify which parameters to test for, provide custom injection payloads and optional tampering scripts -p TESTPARAMETER 可测试参数 Testable parameter(s) --skip=SKIP 对给定参数进行跳过测试 Skip testing for given parameter(s) --skip-static 跳过看似不动态的测试参数 Skip testing parameters that not appear to be dynamic --param-exclude=.. 正则表达式从测试中排除参数（例如“ses”） Regexp to exclude parameters from testing (e.g. &quot;ses&quot;) --dbms=DBMS 将后端DBMS强制为此值 Force back-end DBMS to this value --dbms-cred=DBMS.. DBMS身份验证凭据（用户：密码） DBMS authentication credentials (user:password) --os=OS 强制后端DBMS操作系统达到此值 Force back-end DBMS operating system to this value --invalid-bignum 使用大数字表示值无效 Use big numbers for invalidating values --invalid-logical 使用逻辑运算使值无效 Use logical operations for invalidating values --invalid-string 使用随机字符串使值无效 Use random strings for invalidating values --no-cast 关闭有效负载铸造机制 Turn off payload casting mechanism --no-escape 关闭字符串转义机制 Turn off string escaping mechanism --prefix=PREFIX 注入有效内容字符串 Injection payload prefix string --suffix=SUFFIX 注入有效负载后缀字符串 Injection payload suffix string --tamper=TAMPER 使用指定的脚本来篡改注入数据 Use given script(s) for tampering injection data Detection(检查): 这些选项可用于自定义检测阶段 These options can be used to customize the detection phase --level=LEVEL 要执行的测试级别（1-5，默认值1） Level of tests to perform (1-5, default 1) --risk=RISK 执行测试的风险（1-3，默认1） Risk of tests to perform (1-3, default 1) --string=STRING 查询计算为True时要匹配的字符串 String to match when query is evaluated to True --not-string=NOT.. 查询计算为False时要匹配的字符串 String to match when query is evaluated to False --regexp=REGEXP 当查询被评估为True时匹配的正则表达式 Regexp to match when query is evaluated to True --code=CODE 查询评估为True时要匹配的HTTP代码 HTTP code to match when query is evaluated to True --text-only 仅根据文本内容比较页面 Compare pages based only on the textual content --titles 仅根据标题比较页面 Compare pages based only on their titles Techniques(技术): 这些选项可用于调整特定SQL注入技术的测试 These options can be used to tweak testing of specific SQL injection techniques --technique=TECH 要使用的SQL注入技术（默认为“BEUSTQ”） SQL injection techniques to use (default &quot;BEUSTQ&quot;) --time-sec=TIMESEC 延迟DBMS响应的秒数（默认值为5） Seconds to delay the DBMS response (default 5) --union-cols=UCOLS 要测试UNION查询SQL注入的列范围 Range of columns to test for UNION query SQL injection --union-char=UCHAR 用于强制列数的字符 Character to use for bruteforcing number of columns --union-from=UFROM 要在UNION查询SQL注入的FROM部分中使用的表 Table to use in FROM part of UNION query SQL injection --dns-domain=DNS.. 用于DNS渗透攻击的域名 Domain name used for DNS exfiltration attack --second-order=S.. 生成的页面URL搜索了二阶响应 Resulting page URL searched for second-order response Fingerprint(指纹): -f, --fingerprint 执行广泛的DBMS版本指纹 Perform an extensive DBMS version fingerprint Enumeration(枚举): 这些选项可用于枚举表中包含的后端数据库管理系统信息，结构和数据。 此外，您可以运行自己的SQL语句 These options can be used to enumerate the back-end database management system information, structure and data contained in the tables. Moreover you can run your own SQL statements -a, --all 检索一切 Retrieve everything -b, --banner 检索DBMS横幅 Retrieve DBMS banner --current-user 检索DBMS当前用户 Retrieve DBMS current user --current-db 检索DBMS当前数据库 Retrieve DBMS current database --hostname 检索DBMS服务器主机名 Retrieve DBMS server hostname --is-dba 检测DBMS当前用户是否为DBA Detect if the DBMS current user is DBA --users 枚举DBMS用户 Enumerate DBMS users --passwords 枚举DBMS用户密码哈希值 Enumerate DBMS users password hashes --privileges 枚举DBMS用户权限 Enumerate DBMS users privileges --roles 枚举DBMS用户角色 Enumerate DBMS users roles --dbs 枚举DBMS数据库 Enumerate DBMS databases --tables 枚举DBMS数据库表 Enumerate DBMS database tables --columns 枚举DBMS数据库表列 Enumerate DBMS database table columns --schema 枚举DBMS架构 Enumerate DBMS schema --count 检索表的条目数 Retrieve number of entries for table(s) --dump 导出保存DBMS数据库表条目 Dump DBMS database table entries --dump-all 导出保存所有DBMS数据库表条目 Dump all DBMS databases tables entries --search 搜索列，表和/或数据库名称 Search column(s), table(s) and/or database name(s) --comments 检索DBMS注释 Retrieve DBMS comments -D DB 要枚举的DBMS数据库 DBMS database to enumerate -T TBL 要枚举的DBMS数据库表 DBMS database table(s) to enumerate -C COL 要枚举的DBMS数据库表列 DBMS database table column(s) to enumerate -X EXCLUDECOL DBMS数据库表列不枚举 DBMS database table column(s) to not enumerate -U USER DBMS用户枚举 DBMS user to enumerate --exclude-sysdbs 枚举表时排除DBMS系统数据库 Exclude DBMS system databases when enumerating tables --pivot-column=P.. 关键的字段名称 Pivot column name --where=DUMPWHERE 在表导出储存时使用WHERE条件 Use WHERE condition while table dumping --start=LIMITSTART 要检索的第一个转储表条目 First dump table entry to retrieve --stop=LIMITSTOP 要检索的最后转储表条目 Last dump table entry to retrieve --first=FIRSTCHAR 首先查询要检索的输出字符 First query output word character to retrieve --last=LASTCHAR 上次查询输出要检索的单词字符 Last query output word character to retrieve --sql-query=QUERY 要执行的SQL语句 SQL statement to be executed --sql-shell 提示交互式SQL shell Prompt for an interactive SQL shell --sql-file=SQLFILE 从指定文件执行SQL语句 Execute SQL statements from given file(s) Brute force(暴力): 这些选项可以用来运行暴力检查。 These options can be used to run brute force checks --common-tables 检查公共表的存在 Check existence of common tables --common-columns 检查公共列(字段)的存在 Check existence of common columns User-defined function injection(用户定义的函数注入): 这些选项可用于创建自定义用户定义的函数 These options can be used to create custom user-defined functions --udf-inject 注入自定义用户定义的函数 Inject custom user-defined functions --shared-lib=SHLIB 共享库的本地路径 Local path of the shared library File system access(文件系统访问): 这些选项可用于访问后端数据库管理系统底层文件系统 These options can be used to access the back-end database management system underlying file system --file-read=RFILE 从后端DBMS文件系统中读取文件 Read a file from the back-end DBMS file system --file-write=WFILE 在后端DBMS文件系统上写一个本地文件 Write a local file on the back-end DBMS file system --file-dest=DFILE 要写入的后端DBMS绝对文件路径 Back-end DBMS absolute filepath to write to Operating system access(操作系统访问): 这些选项可用于访问底层操作系统的后端数据库管理系统 These options can be used to access the back-end database management system underlying operating system --os-cmd=OSCMD 执行操作系统命令 Execute an operating system command --os-shell 提示交互式操作系统shell Prompt for an interactive operating system shell --os-pwn 提示OOB shell，Meterpreter或VNC Prompt for an OOB shell, Meterpreter or VNC --os-smbrelay 单击提示输入OOB shell，Meterpreter或VNC One click prompt for an OOB shell, Meterpreter or VNC --os-bof 存储过程缓冲区溢出利用 Stored procedure buffer overflow exploitation --priv-esc 数据库进程用户权限升级 Database process user privilege escalation --msf-path=MSFPATH 安装Metasploit Framework的本地路径 Local path where Metasploit Framework is installed --tmp-path=TMPPATH 临时文件目录的远程绝对路径 Remote absolute path of temporary files directory Windows registry access(Windows注册表访问): 这些选项可用于访问后端数据库管理系统Windows注册表 These options can be used to access the back-end database management system Windows registry --reg-read 读取Windows注册表项值 Read a Windows registry key value --reg-add 编写Windows注册表项值数据 Write a Windows registry key value data --reg-del 删除Windows注册表项值 Delete a Windows registry key value --reg-key=REGKEY Windows注册表项 Windows registry key --reg-value=REGVAL Windows注册表项值 Windows registry key value --reg-data=REGDATA Windows注册表项值数据 Windows registry key value data --reg-type=REGTYPE Windows注册表项值类型 Windows registry key value type General(常规): 这些选项可用于设置一些常规工作参数 These options can be used to set some general working parameters -s SESSIONFILE 从存储的（.sqlite）文件加载会话 Load session from a stored (.sqlite) file -t TRAFFICFILE 将所有HTTP流量记录到文本文件中 Log all HTTP traffic into a textual file --batch 永远不要求用户输入，使用默认行为 Never ask for user input, use the default behaviour --binary-fields=.. 具有二进制值的结果字段（例如“摘要”） Result fields having binary values (e.g. &quot;digest&quot;) --check-internet 在评估目标之前检查Internet连接 Check Internet connection before assessing the target --crawl=CRAWLDEPTH 从目标网址开始抓取网站 Crawl the website starting from the target URL --crawl-exclude=.. 正则表达式从抓取中排除页面（例如“注销”） Regexp to exclude pages from crawling (e.g. &quot;logout&quot;) --csv-del=CSVDEL 分隔CSV输出中使用的字符（默认为“，”） Delimiting character used in CSV output (default &quot;,&quot;) --charset=CHARSET 盲SQL注入字符集（例如“0123456789abcdef”） Blind SQL injection charset (e.g. &quot;0123456789abcdef&quot;) --dump-format=DU.. 转储数据的格式（CSV（默认），HTML或SQLITE） Format of dumped data (CSV (default), HTML or SQLITE) --encoding=ENCOD.. 用于数据检索的字符编码（例如GBK） Character encoding used for data retrieval (e.g. GBK) --eta 显示每个输出的预计到达时间 Display for each output the estimated time of arrival --flush-session 刷新当前目标的会话文件 Flush session files for current target --forms 在目标URL上解析和测试表单 Parse and test forms on target URL --fresh-queries 忽略存储在会话文件中的查询结果 Ignore query results stored in session file --har=HARFILE 将所有HTTP流量记录到HAR文件中 Log all HTTP traffic into a HAR file --hex 使用DBMS十六进制函数进行数据检索 Use DBMS hex function(s) for data retrieval --output-dir=OUT.. 自定义输出目录路径 Custom output directory path --parse-errors 从响应中解析并显示DBMS错误消息 Parse and display DBMS error messages from responses --save=SAVECONFIG 将选项保存到配置INI文件 Save options to a configuration INI file --scope=SCOPE 正则表达式从提供的代理日志中过滤目标 Regexp to filter targets from provided proxy log --test-filter=TE.. 按有效负载和/或标题选择测试（例如ROW） Select tests by payloads and/or titles (e.g. ROW) --test-skip=TEST.. 按有效载荷和/或标题跳过测试（例如BENCHMARK） Skip tests by payloads and/or titles (e.g. BENCHMARK) --update 升级sqlmap工具 Update sqlmap Miscellaneous(杂项): -z MNEMONICS 使用短助记符（例如“flu，bat，ban，tec = EU”） Use short mnemonics (e.g. &quot;flu,bat,ban,tec=EU&quot;) --alert=ALERT 找到SQL注入时运行主机OS命令 Run host OS command(s) when SQL injection is found --answers=ANSWERS 设置问题答案（例如“quit = N，follow = N”） Set question answers (e.g. &quot;quit=N,follow=N&quot;) --beep 问题和/或发现SQL注入时发出哔哔声 Beep on question and/or when SQL injection is found --cleanup 从特定于sqlmap的UDF和表中清除DBMS Clean up the DBMS from sqlmap specific UDF and tables --dependencies 检查缺少（非核心）sqlmap依赖项 Check for missing (non-core) sqlmap dependencies --disable-coloring 禁用控制台输出着色 Disable console output coloring --gpage=GOOGLEPAGE 使用特定页码的Google dork结果 Use Google dork results from specified page number --identify-waf 对WAF / IPS / IDS保护进行全面测试 Make a thorough testing for a WAF/IPS/IDS protection --mobile 通过HTTP User-Agent标头模仿智能手机 Imitate smartphone through HTTP User-Agent header --offline 在离线模式下工作（仅使用会话数据） Work in offline mode (only use session data) --purge-output 安全删除输出目录中的所有内容 Safely remove all content from output directory --skip-waf 跳过启发式检测WAF / IPS / IDS保护 Skip heuristic detection of WAF/IPS/IDS protection --smart 只有在积极启发式的情况下才能进行彻底的测试 Conduct thorough tests only if positive heuristic(s) --sqlmap-shell 提示交互式sqlmap shell Prompt for an interactive sqlmap shell --tmp-dir=TMPDIR 用于存储临时文件的本地目录 Local directory for storing temporary files --web-root=WEBROOT Web服务器文档根目录（例如“/ var / www”） Web server document root directory (e.g. &quot;/var/www&quot;) --wizard 简单的向导界面，适合初学者用户Simple wizard interface for beginner users ##sqlmap输出详情 选项： -v此选项可用于设置输出消息的详细级别。存在七个级别的详情。默认级别为1，其中显示信息，警告，错误，关键消息和Python回溯（如果发生）。 0：仅显示Python回溯，错误和关键消息。1：还显示信息和警告消息。2：显示调试消息。3：显示注入的有效负载。4：还显示HTTP请求。5：还显示HTTP响应的标题。6：还显示HTTP响应的页面内容。一个合理的详情程度，以进一步了解sqlmap在底层的作用是2级，主要用于检测阶段和接管功能。而如果您想查看工具发送的SQL有效负载，则第3级是您的最佳选择。当您向开发人员提供潜在的错误报告时，也建议使用此级别，确保使用选项生成的流量日志文件与标准输出一起发送-t。为了进一步调试潜在的错误或意外行为，我们建议您将详细程度设置为4级或更高级别。应该注意的是，还可以通过使用此选项的较短版本来设置详细程度，其中字母数量v内的规定开关（而不是选择）确定的详细级别（例如-v，而不是-v 2，-vv代替-v 3，-vvv而不是-v 4等） ##]]></content>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F01%2F10%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
