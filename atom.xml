<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>0x516A&#39;Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-01-12T07:57:33.951Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>C&#39;est La Vie</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>sqlmap总结</title>
    <link href="http://yoursite.com/2019/01/12/sqlmap%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2019/01/12/sqlmap总结/</id>
    <published>2019-01-12T07:36:16.000Z</published>
    <updated>2019-01-12T07:57:33.951Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p> sqlmap是一个开源的渗透测试工具，可以用来自动化检测，利用SQL注入漏洞，获取数据库服务器的权限。它具有强度大的检测引擎，针对不同类型数据库的渗透测试的功能选项，包括获数据库中存储的数据，访问操作系统文件甚至可以通过外带数据连击的方式执行操作系统命令</p><a id="more"></a><p>官方网站 <a href="http://sqlmap.org/" target="_blank" rel="noopener">http://sqlmap.org</a><br>用户手册<a href="https://github.com/sqlmapproject/sqlmap/wiki" target="_blank" rel="noopener">https://github.com/sqlmapproject/sqlmap/wiki</a></p><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><p>sqlmap 支持 MySQL，Oracle，PostgreSQL，Microsoft SQL Server，Microsoft Access，IBM DB2，SQLite，Firebird，Sybase，SAP MaxDB和HSQLDB数据库管理系统。<br>支持的sql注入技术</p><ol><li><p>基于布尔的盲注:即可以根据返回页面判断条件真假的注入；</p></li><li><p>基于时间的盲注:即不能根据页面返回内容判断任何信息，用条件语句查看 时间延迟语句是否执行（即页面返回时间是否增加）来判断；</p></li><li><p>基于报错注入:即页面会返回错误信息，或者把注入的语句的结果直接返回在页面中；</p></li><li><p>联合查询注入:可以使用union的情况下的注入；</p></li><li><p>堆查询注入:可以同时执行多条语句的执行时的注入。</p></li></ol><p>其它功能特点请查看官方手册</p><h2 id="参数详解"><a href="#参数详解" class="headerlink" title="参数详解"></a>参数详解</h2><p>➜  ~ sqlmap -hh<br>Usage: python sqlmap [options]</p><p>Options:<br>  -h, –help            Show basic help message and exit<br>  -hh                   Show advanced help message and exit<br>  –version             Show program’s version number and exit<br>  -v VERBOSE            Verbosity level: 0-6 (default 1)</p><p>  Target:<br>    At least one of these options has to be provided to define the<br>    target(s)</p><pre><code>-d DIRECT           Connection string for direct database connection-u URL, --url=URL   Target URL (e.g. &quot;http://www.site.com/vuln.php?id=1&quot;)-l LOGFILE          Parse target(s) from Burp or WebScarab proxy log file-x SITEMAPURL       Parse target(s) from remote sitemap(.xml) file-m BULKFILE         Scan multiple targets given in a textual file-r REQUESTFILE      Load HTTP request from a file-g GOOGLEDORK       Process Google dork results as target URLs-c CONFIGFILE       Load options from a configuration INI file</code></pre><p>  Request:<br>    These options can be used to specify how to connect to the target URL</p><pre><code>--method=METHOD     Force usage of given HTTP method (e.g. PUT)--data=DATA         Data string to be sent through POST (e.g. &quot;id=1&quot;)--param-del=PARA..  Character used for splitting parameter values (e.g. &amp;)--cookie=COOKIE     HTTP Cookie header value (e.g. &quot;PHPSESSID=a8d127e..&quot;)--cookie-del=COO..  Character used for splitting cookie values (e.g. ;)--load-cookies=L..  File containing cookies in Netscape/wget format--drop-set-cookie   Ignore Set-Cookie header from response--user-agent=AGENT  HTTP User-Agent header value--random-agent      Use randomly selected HTTP User-Agent header value--host=HOST         HTTP Host header value--referer=REFERER   HTTP Referer header value-H HEADER, --hea..  Extra header (e.g. &quot;X-Forwarded-For: 127.0.0.1&quot;)--headers=HEADERS   Extra headers (e.g. &quot;Accept-Language: fr\nETag: 123&quot;)--auth-type=AUTH..  HTTP authentication type (Basic, Digest, NTLM or PKI)--auth-cred=AUTH..  HTTP authentication credentials (name:password)--auth-file=AUTH..  HTTP authentication PEM cert/private key file--ignore-code=IG..  Ignore (problematic) HTTP error code (e.g. 401)--ignore-proxy      Ignore system default proxy settings--ignore-redirects  Ignore redirection attempts--ignore-timeouts   Ignore connection timeouts--proxy=PROXY       Use a proxy to connect to the target URL--proxy-cred=PRO..  Proxy authentication credentials (name:password)--proxy-file=PRO..  Load proxy list from a file--tor               Use Tor anonymity network--tor-port=TORPORT  Set Tor proxy port other than default--tor-type=TORTYPE  Set Tor proxy type (HTTP, SOCKS4 or SOCKS5 (default))--check-tor         Check to see if Tor is used properly--delay=DELAY       Delay in seconds between each HTTP request--timeout=TIMEOUT   Seconds to wait before timeout connection (default 30)--retries=RETRIES   Retries when the connection timeouts (default 3)--randomize=RPARAM  Randomly change value for given parameter(s)--safe-url=SAFEURL  URL address to visit frequently during testing--safe-post=SAFE..  POST data to send to a safe URL--safe-req=SAFER..  Load safe HTTP request from a file--safe-freq=SAFE..  Test requests between two visits to a given safe URL--skip-urlencode    Skip URL encoding of payload data--csrf-token=CSR..  Parameter used to hold anti-CSRF token--csrf-url=CSRFURL  URL address to visit for extraction of anti-CSRF token--force-ssl         Force usage of SSL/HTTPS--hpp               Use HTTP parameter pollution method--eval=EVALCODE     Evaluate provided Python code before the request (e.g.                    &quot;import hashlib;id2=hashlib.md5(id).hexdigest()&quot;)</code></pre><p>  Optimization:<br>    These options can be used to optimize the performance of sqlmap</p><pre><code>-o                  Turn on all optimization switches--predict-output    Predict common queries output--keep-alive        Use persistent HTTP(s) connections--null-connection   Retrieve page length without actual HTTP response body--threads=THREADS   Max number of concurrent HTTP(s) requests (default 1)</code></pre><p>  Injection:<br>    These options can be used to specify which parameters to test for,<br>    provide custom injection payloads and optional tampering scripts</p><pre><code>-p TESTPARAMETER    Testable parameter(s)--skip=SKIP         Skip testing for given parameter(s)--skip-static       Skip testing parameters that not appear to be dynamic--param-exclude=..  Regexp to exclude parameters from testing (e.g. &quot;ses&quot;)--dbms=DBMS         Force back-end DBMS to provided value--dbms-cred=DBMS..  DBMS authentication credentials (user:password)--os=OS             Force back-end DBMS operating system to provided value--invalid-bignum    Use big numbers for invalidating values--invalid-logical   Use logical operations for invalidating values--invalid-string    Use random strings for invalidating values--no-cast           Turn off payload casting mechanism--no-escape         Turn off string escaping mechanism--prefix=PREFIX     Injection payload prefix string--suffix=SUFFIX     Injection payload suffix string--tamper=TAMPER     Use given script(s) for tampering injection data</code></pre><p>  Detection:<br>    These options can be used to customize the detection phase</p><pre><code>--level=LEVEL       Level of tests to perform (1-5, default 1)--risk=RISK         Risk of tests to perform (1-3, default 1)--string=STRING     String to match when query is evaluated to True--not-string=NOT..  String to match when query is evaluated to False--regexp=REGEXP     Regexp to match when query is evaluated to True--code=CODE         HTTP code to match when query is evaluated to True--text-only         Compare pages based only on the textual content--titles            Compare pages based only on their titles</code></pre><p>  Techniques:<br>    These options can be used to tweak testing of specific SQL injection<br>    techniques</p><pre><code>--technique=TECH    SQL injection techniques to use (default &quot;BEUSTQ&quot;)--time-sec=TIMESEC  Seconds to delay the DBMS response (default 5)--union-cols=UCOLS  Range of columns to test for UNION query SQL injection--union-char=UCHAR  Character to use for bruteforcing number of columns--union-from=UFROM  Table to use in FROM part of UNION query SQL injection--dns-domain=DNS..  Domain name used for DNS exfiltration attack--second-url=SEC..  Resulting page URL searched for second-order response--second-req=SEC..  Load second-order HTTP request from file</code></pre><p>  Fingerprint:<br>    -f, –fingerprint   Perform an extensive DBMS version fingerprint</p><p>  Enumeration:<br>    These options can be used to enumerate the back-end database<br>    management system information, structure and data contained in the<br>    tables. Moreover you can run your own SQL statements</p><pre><code>-a, --all           Retrieve everything-b, --banner        Retrieve DBMS banner--current-user      Retrieve DBMS current user--current-db        Retrieve DBMS current database--hostname          Retrieve DBMS server hostname--is-dba            Detect if the DBMS current user is DBA--users             Enumerate DBMS users--passwords         Enumerate DBMS users password hashes--privileges        Enumerate DBMS users privileges--roles             Enumerate DBMS users roles--dbs               Enumerate DBMS databases--tables            Enumerate DBMS database tables--columns           Enumerate DBMS database table columns--schema            Enumerate DBMS schema--count             Retrieve number of entries for table(s)--dump              Dump DBMS database table entries--dump-all          Dump all DBMS databases tables entries--search            Search column(s), table(s) and/or database name(s)--comments          Check for DBMS comments during enumeration-D DB               DBMS database to enumerate-T TBL              DBMS database table(s) to enumerate-C COL              DBMS database table column(s) to enumerate-X EXCLUDE          DBMS database identifier(s) to not enumerate-U USER             DBMS user to enumerate--exclude-sysdbs    Exclude DBMS system databases when enumerating tables--pivot-column=P..  Pivot column name--where=DUMPWHERE   Use WHERE condition while table dumping--start=LIMITSTART  First dump table entry to retrieve--stop=LIMITSTOP    Last dump table entry to retrieve--first=FIRSTCHAR   First query output word character to retrieve--last=LASTCHAR     Last query output word character to retrieve--sql-query=QUERY   SQL statement to be executed--sql-shell         Prompt for an interactive SQL shell--sql-file=SQLFILE  Execute SQL statements from given file(s)</code></pre><p>  Brute force:<br>    These options can be used to run brute force checks</p><pre><code>--common-tables     Check existence of common tables--common-columns    Check existence of common columns</code></pre><p>  User-defined function injection:<br>    These options can be used to create custom user-defined functions</p><pre><code>--udf-inject        Inject custom user-defined functions--shared-lib=SHLIB  Local path of the shared library</code></pre><p>  File system access:<br>    These options can be used to access the back-end database management<br>    system underlying file system</p><pre><code>--file-read=FILE..  Read a file from the back-end DBMS file system--file-write=FIL..  Write a local file on the back-end DBMS file system--file-dest=FILE..  Back-end DBMS absolute filepath to write to</code></pre><p>  Operating system access:<br>    These options can be used to access the back-end database management<br>    system underlying operating system</p><pre><code>--os-cmd=OSCMD      Execute an operating system command--os-shell          Prompt for an interactive operating system shell--os-pwn            Prompt for an OOB shell, Meterpreter or VNC--os-smbrelay       One click prompt for an OOB shell, Meterpreter or VNC--os-bof            Stored procedure buffer overflow exploitation--priv-esc          Database process user privilege escalation--msf-path=MSFPATH  Local path where Metasploit Framework is installed--tmp-path=TMPPATH  Remote absolute path of temporary files directory</code></pre><p>  Windows registry access:<br>    These options can be used to access the back-end database management<br>    system Windows registry</p><pre><code>--reg-read          Read a Windows registry key value--reg-add           Write a Windows registry key value data--reg-del           Delete a Windows registry key value--reg-key=REGKEY    Windows registry key--reg-value=REGVAL  Windows registry key value--reg-data=REGDATA  Windows registry key value data--reg-type=REGTYPE  Windows registry key value type</code></pre><p>  General:<br>    These options can be used to set some general working parameters</p><pre><code>-s SESSIONFILE      Load session from a stored (.sqlite) file-t TRAFFICFILE      Log all HTTP traffic into a textual file--batch             Never ask for user input, use the default behavior--binary-fields=..  Result fields having binary values (e.g. &quot;digest&quot;)--check-internet    Check Internet connection before assessing the target--crawl=CRAWLDEPTH  Crawl the website starting from the target URL--crawl-exclude=..  Regexp to exclude pages from crawling (e.g. &quot;logout&quot;)--csv-del=CSVDEL    Delimiting character used in CSV output (default &quot;,&quot;)--charset=CHARSET   Blind SQL injection charset (e.g. &quot;0123456789abcdef&quot;)--dump-format=DU..  Format of dumped data (CSV (default), HTML or SQLITE)--encoding=ENCOD..  Character encoding used for data retrieval (e.g. GBK)--eta               Display for each output the estimated time of arrival--flush-session     Flush session files for current target--forms             Parse and test forms on target URL--fresh-queries     Ignore query results stored in session file--har=HARFILE       Log all HTTP traffic into a HAR file--hex               Use hex conversion during data retrieval--output-dir=OUT..  Custom output directory path--parse-errors      Parse and display DBMS error messages from responses--save=SAVECONFIG   Save options to a configuration INI file--scope=SCOPE       Regexp to filter targets from provided proxy log--test-filter=TE..  Select tests by payloads and/or titles (e.g. ROW)--test-skip=TEST..  Skip tests by payloads and/or titles (e.g. BENCHMARK)--update            Update sqlmap</code></pre><p>  Miscellaneous:<br>    -z MNEMONICS        Use short mnemonics (e.g. “flu,bat,ban,tec=EU”)<br>    –alert=ALERT       Run host OS command(s) when SQL injection is found<br>    –answers=ANSWERS   Set predefined answers (e.g. “quit=N,follow=N”)<br>    –beep              Beep on question and/or when SQL injection is found<br>    –cleanup           Clean up the DBMS from sqlmap specific UDF and tables<br>    –dependencies      Check for missing (optional) sqlmap dependencies<br>    –disable-coloring  Disable console output coloring<br>    –gpage=GOOGLEPAGE  Use Google dork results from specified page number<br>    –identify-waf      Make a thorough testing for a WAF/IPS protection<br>    –list-tampers      Display list of available tamper scripts<br>    –mobile            Imitate smartphone through HTTP User-Agent header<br>    –offline           Work in offline mode (only use session data)<br>    –purge             Safely remove all content from sqlmap data directory<br>    –skip-waf          Skip heuristic detection of WAF/IPS protection<br>    –smart             Conduct thorough tests only if positive heuristic(s)<br>    –sqlmap-shell      Prompt for an interactive sqlmap shell<br>    –tmp-dir=TMPDIR    Local directory for storing temporary files<br>    –web-root=WEBROOT  Web server document root directory (e.g. “/var/www”)<br>    –wizard            Simple wizard interface for beginner users<br>➜  ~</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt; sqlmap是一个开源的渗透测试工具，可以用来自动化检测，利用SQL注入漏洞，获取数据库服务器的权限。它具有强度大的检测引擎，针对不同类型数据库的渗透测试的功能选项，包括获数据库中存储的数据，访问操作系统文件甚至可以通过外带数据连击的方式执行操作系统命令&lt;/p&gt;
    
    </summary>
    
    
      <category term="工具" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/01/10/hello-world/"/>
    <id>http://yoursite.com/2019/01/10/hello-world/</id>
    <published>2019-01-10T03:43:40.000Z</published>
    <updated>2019-01-10T04:33:35.210Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
